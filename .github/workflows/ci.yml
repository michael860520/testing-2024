name: CI

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Setup
        run: npm i -g @antfu/ni
      - name: Install
        run: nci
      - name: Lint Fix
        run: nr lint:fix
      - name: Lint
        run: nr lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Setup
        run: npm i -g @antfu/ni
      - name: Install
        run: nci
      - name: Typecheck
        run: nr typecheck

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [lts/*]
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Set node ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
      - name: Setup
        run: npm i -g @antfu/ni
      - name: Install
        run: nci
      - name: Build
        run: nr build
      - name: Test
        run: nr test

  sonarcloud:
    needs: [lint, typecheck, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install pnpm
        uses: pnpm/action-setup@v4
      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
      - name: Setup
        run: npm i -g @antfu/ni
      - name: Install
        run: nci
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  create-tag:
    needs: [lint, typecheck, test, sonarcloud] # 確保在所有其他作業完成後執行此作業。
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Create a new tag and push it to remote
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"  # 使用當前時間作為標籤名稱。
          git tag $TAG_NAME                      # 創建標籤。
          git push origin $TAG_NAME              # 推送標籤到遠端。
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 使用 GitHub Token 進行身份驗證。